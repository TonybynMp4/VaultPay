{% extends 'base.html.twig' %}

{% block title %}Liste des Utilisateurs{% endblock %}

{% block stylesheets %}
    <link rel="stylesheet" href="{{ asset('styles/admin/admin.css') }}">
{% endblock %}

{% block main %}
<div class="adminPanel">
    <div class="user-list">
        <h2>Liste des Utilisateurs</h2>
        <ul>
            {% for user in users %}
                <li><a href="#" class="user-link" data-user-id="{{ user.id }}">{{ user.firstname }} - {{ user.email }}</a></li>
            {% endfor %}
        </ul>
    </div>

    <div class="user-transactions">
        <h2>Transactions de l'Utilisateur</h2>
        <div id="transaction-history">
            <!-- Les transactions seront chargées ici -->
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const userLinks = document.querySelectorAll('.user-link');

        userLinks.forEach(link => {
            link.addEventListener('click', function (event) {
                event.preventDefault();
                const userId = this.getAttribute('data-user-id');

                fetch(`/admin/user/${userId}/transactions`)
                    .then(response => response.text())
                    .then(html => {
                        document.getElementById('transaction-history').innerHTML = html;

                        // Add event listeners for cancel buttons
                        const cancelButtons = document.querySelectorAll('.cancel-transaction');
                        cancelButtons.forEach(button => {
                            button.addEventListener('click', function () {
                                const transactionId = this.getAttribute('data-transaction-id');

                                fetch(`/admin/transaction/${transactionId}/cancel`, {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/json',
                                        'X-CSRF-Token': '{{ csrf_token('cancel_transaction') }}'
                                    }
                                })
                                    .then(response => response.json())
                                    .then(data => {
                                        if (data.success) {
                                            alert('Transaction annulée avec succès');
                                            // Optionally, refresh the transaction list
                                        } else {
                                            alert('Erreur lors de l\'annulation de la transaction');
                                        }
                                    })
                                    .catch(error => console.error('Erreur lors de l\'annulation de la transaction :', error));
                            });
                        });
                    })
                    .catch(error => console.error('Erreur lors de la récupération des transactions :', error));
            });
        });
    });
</script>
{% endblock %}
